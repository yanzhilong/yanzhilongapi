<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="Browsing" xmlns="http://ibatis.apache.org/mapping"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <!-- 设置别名，用于底下指定类型的时候不需要全全类名(包括长的空间名 ),最后一个参数是项目的命名空间名 -->
  <alias>
    <typeAlias alias="Browsing" type="yanzhilong.Domain.Browsing, yanzhilongapi"/>
    
  </alias>

  <!-- 数据库到实体类的映射表 -->
  <resultMaps>
    
    <!-- 数据库的全部字段到实体类的映射 -->
    <resultMap id="BrowsingResult" class="Browsing">
      <result property="Id" column="Id" dbType="char" type="string" />
      <result property="Url" column="Url" dbType="varchar" type="string" />
      <result property="CreateDate" column="CreateDate" dbType="datetime" type="DateTime" />
      <result property="UserId" column="UserId" dbType="char" type="string" />
      <result property="Tag" column="Tag" dbType="char" type="string" />

    </resultMap>

  </resultMaps>

  <!-- 声明执行语句列表，可以包含多个<select>、<insert>、<update>、<delete>节点 -->
  <!-- 为了避免SQL语句出现的'<'和'>'会和配置文件的<>冲突，所以SQL语句都写在<![CDATA[  与  ]]>之间 -->
  <statements>

    <!-- 添加句子SQL语句 -->
    <insert id="InsertBrowsing" parameterClass="Browsing" >
      <![CDATA[  
      insert into Browsing  
      (Id,Url,CreateDate,UserId,Tag)  
      values  
      (#Id#,#Url#,#CreateDate#,#UserId#,#Tag#)  
      ]]>
    </insert>

    <!-- parameterClass表示传入的参数为int -->
    <delete id="DeleteBrowsing" parameterClass="Browsing">
      <![CDATA[
          delete from Browsing  
          where
          Id = #Id#  
          ]]>
    </delete>
    
    <!-- #UserName# 表示传入实体类参数的属性，表示实体的的属性 -->
    <update id="UpdateBrowsing" parameterClass="Browsing">
      <![CDATA[  
          UPDATE Browsing SET  
          Url=#Url#,
          CreateDate=#CreateDate#,
          UserId=#UserId#,
          Tag=#Tag#
          WHERE  
          Id=#Id#
          ]]>
    </update>

    <select id="SelectBrowsing" parameterClass="Browsing" resultMap="BrowsingResult">
      <![CDATA[  
          SELECT 
          Id
          ,Url
          ,CreateDate
          ,UserId
          ,Tag
          FROM Browsing
          ]]>
    </select>

    <!--resultMap="SelectAllResult"表示数据库字段与实体类的映射关系和上面配置的SelectAllResult一样-->
    <select id="SelectBrowsingByCondition" parameterClass="Browsing" resultMap="BrowsingResult" extends="SelectBrowsing">
      <dynamic prepend="WHERE">
        <isNotEmpty prepend="AND" property="Id">
          <![CDATA[  
           Id = #Id#
            ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="UserId">
          <![CDATA[  
           UserId = #UserId#
            ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="Tag">
          <![CDATA[  
           Tag = #Tag#
            ]]>
        </isNotEmpty>
      </dynamic>
        <![CDATA[  
            order by CreateDate desc
        ]]>
    </select>
    
  </statements>

</sqlMap>
