<?xml version="1.0" encoding="utf-8" ?>
<sqlMap namespace="User" xmlns="http://ibatis.apache.org/mapping"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  
  <!-- 设置别名，用于底下指定类型的时候不需要全全类名(包括长的空间名 ),最后一个参数是项目的命名空间名 -->
  <alias>
    <typeAlias alias="User" type="yanzhilong.Domain.User, yanzhilongapi"/>
  </alias>

  <!-- 数据库到实体类的映射表 -->
  <resultMaps>

    <!-- 数据库的全部字段到实体类的映射 -->
    <resultMap id="SelectAllResult" class="User">
      <result property="Id" column="Id" dbType="char" type="string" />
      <result property="UserName" column="UserName" dbType="varchar" type="string" />
      <result property="Email" column="Email" dbType="varchar" type="string" />
      <result property="PhoneNumber" column="PhoneNumber" dbType="varchar" type="string" />
      <result property="PasswordHash" column="PasswordHash" dbType="varchar" type="string" />
      <result property="Salt" column="Salt" dbType="varchar" type="string" />
      <result property="DisplayName" column="DisplayName" dbType="varchar" type="string" />
      <result property="CreateDate" column="CreateDate" dbType="datetime" type="DateTime" />
      <result property="FailedLoginAttempts" column="FailedLoginAttempts" dbType="int" type="int" />
      <result property="LastLoginDateUtc" column="LastLoginDateUtc" dbType="datetime" type="DateTime" />
      <result property="CannotLoginUntilDateUtc" column="CannotLoginUntilDateUtc" dbType="datetime" type="DateTime" />
      <result property="LastFailedLoginDateUtc" column="LastFailedLoginDateUtc" dbType="datetime" type="DateTime" />
      
    </resultMap>


    <!-- 这里可以配置其它只需要指定字段的映射文件(这里是不返回ID) -->
  </resultMaps>

  <!-- 声明执行语句列表，可以包含多个<select>、<insert>、<update>、<delete>节点 -->
  <!-- 为了避免SQL语句出现的'<'和'>'会和配置文件的<>冲突，所以SQL语句都写在<![CDATA[  与  ]]>之间 -->
  <statements>

    <!-- 添加句子SQL语句 -->
    <insert id="InsertUser" parameterClass="User" >
      <![CDATA[  
      insert into User  
      (Id,UserName,Email,PhoneNumber,PasswordHash,Salt,DisplayName,CreateDate,FailedLoginAttempts,LastLoginDateUtc,CannotLoginUntilDateUtc,LastFailedLoginDateUtc)  
      values  
      (#Id#,#UserName#,#Email#,#PhoneNumber#,#PasswordHash#,#Salt#,#DisplayName#,#CreateDate#,#FailedLoginAttempts#,#LastLoginDateUtc#,#CannotLoginUntilDateUtc#,#LastFailedLoginDateUtc#)
      ]]>
    </insert>
    
    <!-- parameterClass表示传入的参数为int -->
    <delete id="DeleteUser" parameterClass="User">
      <![CDATA[
          delete from User  
          where  
          Id = #Id#  
          ]]>
    </delete>
    
    <!-- #UserName# 表示传入实体类参数的属性，表示实体的的属性 -->
    <update id="UpdateUser" parameterClass="User">
      <![CDATA[  
          UPDATE User SET  
          UserName=#UserName#,
          Email=#Email#,
          PhoneNumber=#PhoneNumber#,
          PasswordHash=#PasswordHash#,
          Salt=#Salt#,
          DisplayName=#DisplayName#,
          CreateDate=#CreateDate#,
          FailedLoginAttempts=#FailedLoginAttempts#,
          LastLoginDateUtc=#LastLoginDateUtc#,
          CannotLoginUntilDateUtc=#CannotLoginUntilDateUtc#,
          LastFailedLoginDateUtc=#LastFailedLoginDateUtc#
          WHERE  
          Id=#Id#  
          ]]>
    </update>

    <!-- resultMap="SelectAllResult"表示数据库字段与实体类的映射关系和上面配置的SelectAllResult一样 -->
    <select id="SelectAllUser" resultMap="SelectAllResult">
      <![CDATA[  
          SELECT Id
          ,UserName
          ,Email
          ,PhoneNumber
          ,PasswordHash
          ,Salt
          ,DisplayName
          ,CreateDate
          ,FailedLoginAttempts
          ,LastLoginDateUtc
          ,CannotLoginUntilDateUtc
          ,LastFailedLoginDateUtc
          FROM User
          ]]>
    </select>
    
    <!-- #value# 是点位符会被传入的parameterClass的string类型代替 -->
    <select id="SelectUserByCondition" parameterClass="string" resultMap="SelectAllResult" extends="SelectAllUser">
      <dynamic prepend="WHERE">
        <isNotEmpty prepend="AND" property="Id">
          <![CDATA[  
           Id = #Id#
            ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="UserName">
          <![CDATA[  
           UserName = #UserName#
            ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="Email">
          <![CDATA[  
           Email = #Email#
            ]]>
        </isNotEmpty>
        <isNotEmpty prepend="AND" property="PhoneNumber">
          <![CDATA[  
           PhoneNumber = #PhoneNumber#
            ]]>
        </isNotEmpty>
      </dynamic>
    </select>

  </statements>

</sqlMap>
